@model ThunderFireHomeAdmin.Models.TariffsModel
@{
    ViewBag.Title = "Tarifas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="modal fade" id="modaltarifas" tabindex="-1" role="dialog" aria-labelledby="attributetypelabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 style="color:red;float:left"><i class="fa fa-percent" aria-hidden="true"> </i> @ViewBag.Title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="OPERATION" value="0" />
                <input type="hidden" id="FNIDTAR" value="0" />
                <div class="form-group row">
                    <label for="FUSUCFG" class="col-sm-2 control-label form-control-sm">Usuário:</label>
                    <div class="col-sm-10">
                        @Html.DropDownListFor(model => model.FUSUCFG, new SelectList(Model.ListaUsuarios, "CODUSU", "NOMUSU", Model.FUSUCFG), " -- Selecione --", new { @class = "form-control form-control-sm" })
                    </div>
                </div>

                <div class="form-group row">
                    <label for="FNIVCFG" class="col-sm-2 control-label form-control-sm">Nível:</label>
                    <div class="col-sm-4">
                        @Html.DropDownListFor(model => model.FNIVCFG, new SelectList(Model.ListaNivelConfiguracao, "KEYCOD", "DSCTAB", Model.FNIVCFG), " -- Selecione --", new { @class = "form-control form-control-sm" })
                    </div>

                    <label for="FCODTAR" class="col-sm-2 control-label form-control-sm">Tarifa:</label>
                    <div class="col-sm-4">

                        @if (Model.ListaTarifa != null)
                        {
                            @Html.DropDownListFor(model => model.FCODTAR, new SelectList(Model.ListaTarifa, "CODTAR", "DSCTAR", Model.FCODTAR), " -- Selecione --", new { @class = "form-control form-control-sm" })
                        }

                    </div>
                </div>



                <div class="form-group row">
                    <label for="FCODBND" class="col-sm-2 control-label form-control-sm">Bandeira:</label>
                    <div class="col-sm-4">

                        @Html.DropDownListFor(model => model.FCODBND, new SelectList(Model.ListaBandeiras, "KEYCOD", "DSCTAB", Model.FCODBND), " -- Selecione --", new { @class = "form-control form-control-sm" })

                    </div>
                    <label for="FMODCRT" class="col-sm-2 control-label form-control-sm">Modalidade:</label>
                    <div class="col-sm-4">
                        @Html.DropDownListFor(model => model.FMODCRT, new SelectList(Model.ListaModalidade, "MODCRT", "DSCMOD", Model.FCODEXP), " -- Selecione --", new { @class = "form-control form-control-sm" })
                    </div>
                </div>

                <div class="form-group row">
                    <label for="FTIPLIN" class="col-sm-2 control-label form-control-sm">Linha:</label>
                    <div class="col-sm-4">

                        @Html.DropDownListFor(model => model.FTIPLIN, new SelectList(Model.ListaLinhas, "KEYCOD", "DSCTAB", Model.FCODEXP), " -- Selecione --", new { @class = "form-control form-control-sm" })

                    </div>
                    <label for="FCODEXP" class="col-sm-2 control-label form-control-sm">Expansão</label>
                    <div class="col-sm-4">
                        @Html.DropDownListFor(model => model.FCODEXP, new SelectList(Model.ListaTiposExpansao, "TIPEXP", "DSCEXP", Model.FCODEXP), " -- Selecione --", new { @class = "form-control form-control-sm" })
                    </div>
                </div>

                <div class="form-group row">
                    <label for="FFMTCOB" class="col-sm-2 control-label form-control-sm">Cobrança:</label>
                    <div class="col-sm-4">

                        @Html.DropDownListFor(model => model.FFMTCOB, new SelectList(Model.ListaFormaCobranca, "KEYCOD", "DSCTAB", Model.FFMTCOB), " -- Selecione --", new { @class = "form-control form-control-sm" })

                    </div>
                    <label for="FRSPTAR" class="col-sm-2 control-label form-control-sm">Responsável:</label>
                    <div class="col-sm-4">

                        @Html.DropDownListFor(model => model.FRSPTAR, new SelectList(Model.ListaResponsavel, "KEYCOD", "DSCTAB", Model.FRSPTAR), new { @class = "form-control form-control-sm" })

                    </div>

                </div>
                <div class="form-group row">
                    <label for="FPCTTAR" class="col-sm-3 control-label form-control-sm">%  Tarifa:</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control form-control-sm money" id="FPCTTAR" size="8" maxlength="8" required>
                    </div>
                    <label for="FVLRTAR" class="col-sm-3 control-label form-control-sm">Valor Tarifa:</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control form-control-sm money" id="FVLRTAR" size="8" maxlength="8" required>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="FTARBAS" class="col-sm-3 control-label form-control-sm">Tarifa Mínima:</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control form-control-sm money" id="FTARBAS" size="8" maxlength="8" required>
                    </div>
                    <label for="FTARMAX" class="col-sm-3 control-label form-control-sm">Tarifa Máxima:</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control form-control-sm money" id="FTARMAX" size="8" maxlength="8" required>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="FVLRINF" class="col-sm-3 control-label form-control-sm">Valor Mínimo:</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control form-control-sm money" id="FVLRINF" size="8" maxlength="8" required>
                    </div>
                    <label for="FVLRMAX" class="col-sm-3 control-label form-control-sm">Valor Máximo:</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control form-control-sm money" id="FVLRMAX" size="8" maxlength="8" required>
                    </div>
                </div>
                <div class="form-check">
                    <input class="form-check-input form-control-sm" type="checkbox" value="" id="FSTAREC" checked>
                    <label class="form-check-label form-control-sm" for="FSTAREC">Ativo</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                <button type="button" class="btn btn-primary" id="btn_update">Atualizar</button>
            </div>
        </div>
    </div>
</div>


<div class="col-sm-12">
    <div class="card">
        <div class="card-header">
            <h5 class="card-title">@ViewBag.Title</h5>
        </div>
        <div class="card-body">
            <div class="form-group row">
                <label for="CCODUSU" class="col-sm-2 control-label">Usuário</label>
                <div class="col-sm-4">
                    @Html.DropDownListFor(model => model.CUSUCFG, new SelectList(Model.ListaUsuarios, "CODUSU", "NOMUSU", Model.CUSUCFG), " -- Selecione --", new { @class = "form-control form-control-sm" })
                </div>
                <label for="CCODPRO" class="col-sm-2 control-label">Produto</label>
                <div class="col-sm-4">
                    @Html.DropDownListFor(model => model.CNIVCFG, new SelectList(Model.ListaNivelConfiguracao, "KEYCOD", "DSCTAB", Model.CNIVCFG), " -- Selecione --", new { @class = "form-control form-control-sm" })
                </div>
            </div>

            <button id="btn_add" value="Adicionar" class="btn btn-primary btn-sm" onclick="CallForAdd();"><i class="fa fa-plus" aria-hidden="true"></i> Adicionar</button>
            <hr />
            <table id="tbtarifa" class="table-sm table-striped table-bordered dt-responsive nowrap dataTable js-exportable" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Status</th>
                        <th>Tarifa</th>
                        <th>Cobrança</th>
                        <th>Expansão</th>
                        <th>Tar. Min.</th>
                        <th>Tar. Max.</th>
                        <th>%</th>
                        <th>Valor</th>
                        <th>Mín.</th>
                        <th>Máximo</th>
                        <th>Por</th>
                        <th>&#160;</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>



@section scripts{
    @*<script src="~/Scripts/Rules/tarifas.js"></script>*@
    <script>
        var TbDetalhe;

        $(document).ready(function () {
            $('.money').mask('000.000,00', { reverse: true });
            $('.money2').mask("#.##0,00", { reverse: true });

            AtualizaDetalhe();

            $(document).on("click", "#btn_update", function () {

                if (PrimaryValidation()) {
                    var mode = $("#OPERATION").val();
                    var VDATA = JSON.stringify({
                        'NIDTAR': parseInt($("#FNIDTAR").val()),
                        'NIVCFG': parseInt($("#FNIVCFG").val()),
                        'USUCFG': parseInt($("#FUSUCFG").val()),
                        'CODTAR': parseInt($("#FCODTAR").val()),
                        'CODBND': parseInt($("#FCODBND").val()),
                        'TIPLIN': parseInt($("#FTIPLIN").val()),
                        'MODCRT': parseInt($("#FMODCRT").val()),
                        'CODEXP': parseInt($("#FCODEXP").val()),
                        'CODMOE': 1,
                        'FMTCOB': parseInt($("#FFMTCOB").val()),
                        'TARBAS': ToFloat($("#FTARBAS").val()),
                        'PCTTAR': ToFloat($("#FPCTTAR").val()),
                        'VLRTAR': ToFloat($("#FVLRTAR").val()),
                        'VLRINF': ToFloat($("#FVLRINF").val()),
                        'VLRMAX': ToFloat($("#FVLRMAX").val()),
                        'TARMAX': ToFloat($("#FTARMAX").val()),
                        'RSPTAR': parseInt($("#FRSPTAR").val()),
                        'STAREC': $("#FSTAREC").is(':checked') ? 1 : 0
                    });
                    $.ajax({
                        type: "POST",
                        url: GetUrl("Tarifacao/AtualizarTarifa?modo=" + mode),
                        data: VDATA,
                        dataType: 'json',
                        contentType: 'application/json',
                        beforeSend: function () { },
                        success: function (result) {
                            console.log(result);
                            $.alert({ class: 'danger', title: 'Tarifa', message: result.MessageToUser, effect: 'zoom' });
                        },
                        error: function (data) {
                            console.log(data);
                            $.alert({ class: 'danger', title: 'Tarifa', message: 'Ocorreu um erro inesperado, por favor tente novamente', effect: 'zoom' });
                        }
                    });
                }



            });


            $('#CUSUCFG').on('change', function () {
                $('#tbtarifa').DataTable().ajax.reload();
            });
            $('#CNIVCFG').on('change', function () {
                $('#tbtarifa').DataTable().ajax.reload();
            });

            //$(document).on('hidden.bs.modal', '#modaltarifas', function () {
            //    window.location = GetUrl("/Tarifacao/ExpansaoTarifa");
            //});

        });

        function AtualizaDetalhe() {
            try {

                if (TbDetalhe == null) {

                    TbDetalhe = $('#tbtarifa').DataTable(
                        {
                            paging: true,
                            searching: false,
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "Todos"]],
                            processing: true,
                            serverSide: true,
                            //orderMulti: false,
                            responsive: true,
                            ajax: {
                                url: GetUrl("Tarifacao/PesquisarTarifa"),
                                type: "POST",
                                datatype: "json",
                                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                                data: {
                                    pUSUCFG: function () {
                                        var InputVal = $('#CUSUCFG').val();
                                        if (InputVal > 0)
                                            return InputVal;
                                        else
                                            return 0;
                                    },
                                    pNIVCFG: function () { return $('#CNIVCFG').val(); }
                                }
                            },
                            columns: [
                                { data: "NIDTAR" },
                                { data: "DSCREC" },
                                { data: "DSCTAR" },
                                { data: "DSCCOB" },
                                { data: "DSCEXP" },
                                { data: "TARBAS", render: $.fn.dataTable.render.number('.', ',', 2, '') },
                                { data: "TARMAX", render: $.fn.dataTable.render.number('.', ',', 2, '') },
                                { data: "PCTTAR", render: $.fn.dataTable.render.number('.', ',', 2, '') },
                                { data: "VLRTAR", render: $.fn.dataTable.render.number('.', ',', 2, '') },
                                { data: "VLRINF", render: $.fn.dataTable.render.number('.', ',', 2, '') },
                                { data: "VLRMAX", render: $.fn.dataTable.render.number('.', ',', 2, '') },
                                { data: "LGNUSU" },
                                {
                                    "render": function (data, type, row) {
                                        return "<button id='btn_call_edt' value='Editar' class='btn btn-primary btn-sm' onclick=\"CallForEdit('" + row.NIDTAR + "');\"> <i class='fas fa-edit'></i></button>&nbsp;"
                                    }
                                }
                            ],
                            "language": {
                                "processing": "Aguarde, buscando informações",
                                "loadingRecords": "Carregando",
                            },
                            "pageLength": 10,
                            "oLanguage": {
                                "sLengthMenu": "Mostrar _MENU_ registros por página",
                                "sZeroRecords": "Nenhum registro encontrado",
                                "sInfo": "Mostrando _START_ / _END_ de _TOTAL_ registro(s)",
                                "sInfoEmpty": "Mostrando 0 / 0 de 0 registros",
                                "sInfoFiltered": "(filtrado de _MAX_ registros)",
                                "sSearch": "Pesquisar: "
                            },
                            columnDefs: [
                                { "targets": [0], "visible": false, "searchable": false },
                                { className: "text-left", "targets": [1], "visible": true, "searchable": false, "width": "20%" },
                                { className: "text-left", "targets": [2], "visible": true, "searchable": false, "width": "20%" },
                                { className: "text-right", "targets": [3, 4, 5, 6], "visible": true, "searchable": false, "width": "15px" },
                                { className: "text-left", "targets": [7], "visible": true, "searchable": false, "width": "15px" },
                                { className: "text-left", "targets": [8], "visible": true, "searchable": false, "width": "15px" },
                                { className: "text-left", "targets": [9], "visible": true, "searchable": false, "width": "15px" },
                                { className: "text-left", "targets": [10], "visible": true, "searchable": false, "width": "15px" },
                                { className: "text-left", "targets": [11], "visible": true, "searchable": false, "width": "15px" },
                                { className: "text-left", "targets": [12], "visible": true, "searchable": false, "width": "15px" }
                            ]
                        });
                }
                else {
                    TbDetalhe.DataTable().ajax.reload();
                }
            }
            catch (e) {
                alert(e);
            }
        }


        function PrimaryValidation() {

            var aval;
            var msg = '';
            var ret = true;

            var modo = parseInt($("#FOPERATION").val());
            if (modo == 2) {
                aval = parseInt($("#FNIDTAR").val());
                if (aval <= 0) {
                    msg = 'Identificacao do Registro Inválida';
                    ret = false;
                }
            }
            if (ret === true) {
                aval = parseInt($("#FNIVCFG").val());
                if (aval <= 0) {
                    msg = 'Nível de Configuração Inválido';
                    ret = false;
                }
            }
            if (ret === true) {
                aval = parseInt($("#FUSUCFG").val());
                if (aval <= 0) {
                    msg = 'Selecione um usuário válido';
                    ret = false;
                }
            }
            if (ret === true) {
                aval = parseInt($("#FCODTAR").val());
                if (aval <= 0) {
                    msg = 'Selecione uma tarifa válida';
                    ret = false;
                }
            }
            if (ret === true) {
                aval = parseInt($("#FCODBND").val());
                if (aval < 0) {
                    $("#FCODBND").val("0");
                }
            }
            if (ret === true) {
                aval = parseInt($("#FTIPLIN").val());
                if (aval < 0) {
                    $("#FTIPLIN").val("0");
                }
            }
            if (ret === true) {
                aval = parseInt($("#FMODCRT").val());
                if (aval < 0) {
                    $("#FMODCRT").val("0");
                }
            }
            if (ret === true) {
                aval = parseInt($("#FCODEXP").val());
                if (aval < 0) {
                    $("#FCODEXP").val("0");
                }
            }
            if (ret === true) {
                aval = parseInt($("#FFMTCOB").val());
                if (aval <= 0) {
                    msg = 'Selecione um FORMATO de cobrança válido';
                    ret = false;
                }
            }
            if (ret === true) {
                aval = parseInt($("#FRSPTAR").val());
                if (aval <= 0) {
                    $("#FRSPTAR").val("2");
                }
            }
            var all0 = 0;
            aval = $("#FTARBAS").val();
            if ((aval == null) || (aval == '')) {
                $("#FTARBAS").val("0");
                all0++;
            }

            aval = $("#FPCTTAR").val();
            if ((aval == null) || (aval == '')) {
                $("#FPCTTAR").val("0");
                all0++;
            }

            aval = $("#FVLRTAR").val();
            if ((aval == null) || (aval == '')) {
                $("#FVLRTAR").val("0");
                all0++;
            }

            aval = $("#FVLRINF").val();
            if ((aval == null) || (aval == '')) {
                $("#FVLRINF").val("0");
                all0++;
            }

            aval = $("#FVLRMAX").val();
            if ((aval == null) || (aval == '')) {
                $("#FVLRMAX").val("0");
                all0++;
            }


            aval = $("#FTARMAX").val();
            if ((aval == null) || (aval == '')) {
                $("#FTARMAX").val("0");
                all0++;
            }

            if (all0 == 6) {
                ret = false;
                msg = "Informe os campos de valores";
            }

            if (ret == true) {
                var val = ToFloat($("#FVLRTAR").val());
                if (val <= 0) {
                    ret = false;
                    msg = "Informe o Valor da Tarifa";
                }
            }

            if (ret == true) {
                var val = ToFloat($("#FVLRINF").val());

                if (val <= 0) {
                    ret = false;
                    msg = "Informe o Limite Minimo de Operação da Tarifa";
                }
            }

            if (ret == true) {
                var val = ToFloat($("#FVLRMAX").val());

                if (val <= 0) {
                    ret = false;
                    msg = "Informe o Limite Máximo de Operação da Tarifa";
                }
            }

            if (ret == true) {
                var val1 = ToFloat($("#FVLRINF").val());
                var val2 = ToFloat($("#FVLRMAX").val());

                if (val1 > val2) {
                    ret = false;
                    msg = "o Limite Mínimo não pode ser maior que o Limite Máximo de Operação da Tarifa";
                }
            }

            if (ret === false) {
                $.alert({ class: 'danger', title: 'Tarifa', message: msg, effect: 'zoom' });
            }

            return ret;
        }


        function CallForAdd() {
            $("#OPERATION").val("1");
            $("#FSTAREC").prop('checked', "true");
            $("#FNIDTAR").val("0");
            $("#FUSUCFG").val($("#CUSUCFG").val());
            $("#FNIVCFG").val($("#CNIVCFG").val());
            $("#FUSUCFG").prop("disabled", true);
            $("#FNIVCFG").prop("disabled", true);
            $('#modaltarifas').modal({ backdrop: 'static', Keyboard: 'true' });
            $('#modaltarifas').modal('toggle');
        }
        function CallForEdit(pNIDTAR) {
            $("#OPERATION").val("2");
            $.ajax({
                type: "GET",
                url: GetUrl("/Tarifacao/SelecionarTarifa"),
                data: { pNIDTAR: pNIDTAR },
                dataType: 'json',
                success: function (result) {
                    $("#FNIDTAR").val(result.NIDTAR);
                    $("#FNIVCFG").val(result.NIVCFG);
                    $("#FNIVCFG").prop("disabled", true);
                    $("#FUSUCFG").val(result.USUCFG);
                    $("#FUSUCFG").prop("disabled", true);
                    $("#FCODTAR").val(result.CODTAR);
                    $("#FCODBND").val(result.CODBND);
                    $("#FTIPLIN").val(result.TIPLIN);
                    $("#FMODCRT").val(result.MODCRT);
                    $("#FCODEXP").val(result.CODEXP);
                    $("#FFMTCOB").val(result.FMTCOB);

                    var val = new Intl.NumberFormat('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(result.TARBAS)
                    /* -- Valores  -- */
                    //$("#FTARBAS").val(parseInt(result.TARBAS * 100));
                    $("#FTARBAS").val(formatNumber(result.TARBAS));
                    $("#FPCTTAR").val(formatNumber(result.PCTTAR));
                    $("#FVLRTAR").val(formatNumber(result.VLRTAR));
                    $("#FVLRINF").val(formatNumber(result.VLRINF));
                    $("#FVLRMAX").val(formatNumber(result.VLRMAX));
                    $("#FTARMAX").val(formatNumber(result.TARMAX));
                    /* -- Valores  -- */

                    $("#FRSPTAR").val(result.RSPTAR);
                    $("#FSTAREC").prop('checked', (result.STAREC == 1));
                }
            });
            $('#modaltarifas').modal({ backdrop: 'static', Keyboard: 'true' });
            $('#modaltarifas').modal('toggle');
        }
    </script>
}